%%
%%   Copyright 2015 Zalando SE
%%
%%   Licensed under the Apache License, Version 2.0 (the "License");
%%   you may not use this file except in compliance with the License.
%%   You may obtain a copy of the License at
%%
%%       http://www.apache.org/licenses/LICENSE-2.0
%%
%%   Unless required by applicable law or agreed to in writing, software
%%   distributed under the License is distributed on an "AS IS" BASIS,
%%   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
%%   See the License for the specific language governing permissions and
%%   limitations under the License.
%%
[

%%
%% logger config
{lager, [
   {handlers, [
      {lager_console_backend, [error, {lager_default_formatter, [time, " [",severity,"] ", message, "\n"]}]}
     ,{lager_file_backend,    [{file, "log/access.log"}, {level, none}, {formatter, lager_default_formatter},{formatter_config, [date, " ", time, " ", message, "\n"]}]}
   ]},
   {traces, [
      {{lager_file_backend, "log/access.log"}, [{module, knet_udp}],  notice}
     ,{{lager_file_backend, "log/access.log"}, [{module, knet_tcp}],  notice}
     ,{{lager_file_backend, "log/access.log"}, [{module, knet_ssl}],  notice}
     ,{{lager_file_backend, "log/access.log"}, [{module, knet_http}], notice}
     ,{{lager_file_backend, "log/access.log"}, [{module, knet_ws}],   notice}
   ]}
]},

%%
%% clustering and consistent hash
{ambit, [
   {name, typhoon}
  ,{ring, [
      {type, ring}
     ,{m,      64}
     ,{q,    4096}
     ,{n,       3}
     ,{hash,  sha}  
   ]},

   %%
   %% list of cluster seed nodes
   {seed,       []}
]},

%%
%% data plane - i/o end-points
{kmq, [
   {port, [
      "udp://*:20100?recbuf=1048576"
     ,"udp://*:20101?recbuf=1048576"
     ,"udp://*:20102?recbuf=1048576"
     ,"udp://*:20103?recbuf=1048576"
     ,"udp://*:20104?recbuf=1048576"
     ,"udp://*:20105?recbuf=1048576"
     ,"udp://*:20106?recbuf=1048576"
     ,"udp://*:20107?recbuf=1048576"
     ,"udp://*:20108?recbuf=1048576"
     ,"udp://*:20109?recbuf=1048576"
   ]}
]},

%%
%% telemetry i/o
{aura, [
   %% cluster topology configuration
   {ring, [
      {type, ring}
     ,{m,      64}
     ,{q,    1024}
     ,{n,       3}
     ,{hash,  sha}
   ]}

   %%
   %% number of egress workers
  ,{egress,   10}

   %%
   %% number of ingress workers
  ,{ingress,   2}

   %%
   %%
  ,{vardir,     "/tmp/typhoon/log"}



  ,{in,   [
      {ttl, 10000}
   ]}
  ,{mq,   [
      {capacity,  1000}
     ,{tts,       5000}
     ,{fspool,   "/tmp/typhoon/q"}
   ]}
]},


%%
%%
{typhoon, [
   %% scenario file(s) storage
   {libdir,     "/tmp/typhoon/lib"}
]},


%%
%%
{restd, [
   {default, [
      {port,  "http://*:8080"},
      {pool, 10},
      {route, [
         %%
         %% static
         {"/css/:file",            restd_api_webapp, [{htdoc, zephyrus}, {path, css}]},
         {"/fonts/:file",          restd_api_webapp, [{htdoc, zephyrus}, {path, fonts}]},
         {"/img/:file",          restd_api_webapp, [{htdoc, zephyrus}, {path, img}]},
         {"/js/_",                 restd_api_webapp, [{htdoc, zephyrus}]},
         {"/js/ace/_",             restd_api_webapp, [{htdoc, zephyrus}]},
         {"/js/ace/snippets/_",    restd_api_webapp, [{htdoc, zephyrus}]},

         %%
         %% dashboard
         {"/dashboard",                               zephyrus_dashboard},
         {"/dashboard/:ui",                           zephyrus_dashboard},
         {"/dashboard/:ui/:id",                       zephyrus_dashboard},
         {"/dashboard/:ui/:id/:t/:dur",               zephyrus_dashboard},
         {"/:id",                                     zephyrus_dashboard},
         {"/",                                        zephyrus_dashboard},

         %%
         %% rest api 
         {"/user/:user/scenario",                     zephyrus_scenario_list},

         {"/analysis/:id/:a/:b",                      zephyrus_dashboard},
         {"/lint/:id",                                zephyrus_lint},
         {"/scenario/:id",                            zephyrus_scenario},
         {"/scenario/:id/attributes",                 zephyrus_attribute},
         {"/scenario/:id/history",                    zephyrus_history},

         {"/scenario/:id/:action",                    zephyrus_action},
         {"/scenario/:id/cubism/:urn/:from/:to",      zephyrus_cubism},
         {"/scenario/:id/series/:urn/:from/:to",      zephyrus_series},
         {"/health/:check",                           zephyrus_health},

         {"/tests/:id",                               zephyrus_test}
      ]}
   ]}
]}

].

